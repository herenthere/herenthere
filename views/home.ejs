<!--
Marist College - Capping Project - Prof. Arias
HereNThere || Rights reserved
==========================
Juan Diaz
Francesco Galletti
Timbille Kulendi
Kulvinder Lotay
Tashi Palden
Joey Pupel  
==========================
homepage.ejs is the page where the user first goes in.
The user can set a departure and destination, click GO
and go to the mappage. There are some extra roadtrip
settings that can be modified such as number of hours
on the road.
==========================
Google Maps API v3
Google Places API v3
==========================
-->

<!DOCTYPE html>
<html>
  <head>
    <title>HereNThere</title>

    <!--These are the typical Bootstrap (BS) characteristics and basic libraries that BS is based on.
        We are just importing these libraries -->
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">

    <!-- Load the Bootstrap required for the datepicker -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <!-- jQuery UI Datepicker -->
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src = "https://code.jquery.com/jquery-1.10.2.js"></script>
    <script src = "https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>

    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/css/bootstrap-select.min.css">

    <!-- Latest compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/js/bootstrap-select.min.js"></script>

    <!-- (Optional) Latest compiled and minified JavaScript translation files -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/js/i18n/defaults-*.min.js"></script>

    <!--Style has all the CSS and modifications to edit how things look on the screen.
    For example #map will modify how the Google Maps window looks like. -->
    <link rel = "stylesheet"
      type = "text/css"
      href = "../files/css/main.css" />

    <!-- Favicon -->
    <link rel="icon" href="files/img/Nlogo.png" type="image/gif" sizes="16x16">
  </head>

  <body>
    <!-- Header partial at the top of the window -->
    <header>
        <% include partials/header %>
    </header>

    <!-- Main elements in the center of the screen -->

    <br><br><br>

    <!-- Container for trip creation input fields -->
    <div class="container-fluid" style="color:#ffffff" align="center" style="border:20px solid #ffffff;">
      <h1>Explore and hit the road</h1>
      <p>Select a departure and destination and hit GO!</p>
      <br>
      <!-- Form post method sends form data to map page upon clicking GO button -->
      <form action="/map" method="post" id="search" name="search" onkeydown="noGoInput()" novalidate>
      <div class="row">
          <div class="col-xs-2 col-md-2 col-lg-2" class="form-group"></div>
          <div class="col-xs-2 col-md-3 col-lg-4" class="form-group">
            <label for="departure">Departure:</label>
            <!-- Handles form control for departure input -->
            <input type="text" class="form-control" id="origin-input-home" name="departure">
            <input id="originplaceid" name="originplaceid" type="text" hidden>
            <!-- References datepicker function in script for departure -->
            <input type = "text" id = "departure-datepicker" placeholder = "Add Date" style="color:grey;">
          </div>
          <!-- Handles form control for destination input -->
          <div class="col-xs-2 col-md-3 col-lg-4" class="form-group">
            <label for="destination">Destination:</label>
            <input type="text" class="form-control" id="destination-input-home" name="destination" >
            <input id="destinationplaceid" name="destinationplaceid" type="text" hidden>
            <!-- References datepicker function in script for departure -->
            <input type = "text" id = "destination-datepicker" placeholder = "Add Date" style="color:grey;">
          </div>
          <div class="col-xs-1 col-md-1 col-lg-1">
            <br>
            <input type="submit" class="btn btn-primary" value="GO" id="GO" disabled></button> 
          </div>
      </div>

        <!--  Reference  myFunction() in script
              On clicking Additional filters button displays panel-->
        <!--  Filters for locations the user wants to see on the map -->
        <div class="w3-container">
          <h3><button type="button" class="btn btn-primary btn-lg" onclick="myFunction()">Additional Filters</button></h3>

          <div class="w3-panel w3-blue w3-card-4" style="width:500px;display:none;" id="additionalfilters">
            <br>
            <select class="selectpicker" multiple data-live-search="true" title="Place categories" data-selected-text-format="count > 2" data-size="4">
                <option>Airport</option>
                <option>Amusement Park</option>
                <option>Aquarium</option>
                <option>Art Gallery</option>
                <option>Bakery</option>
                <option>Bank</option>
                <option>Bar & Drinks</option>
                <option>Beauty Salon</option>
                <option>Bicycle Store</option>
                <option>Book Store</option>
                <option>Bowling Alley</option>
                <option>Cafe</option>
                <option>Car Repair</option>
                <option>Car Wash</option>
                <option>Casino</option>
                <option>Church</option>
                <option>City Hall</option>
                <option>Clothing Store</option>
                <option>Convenience Store</option>
                <option>Department Store</option>
                <option>Electronics Store</option>
                <option>Embassy</option>
                <option>Florist</option>
                <option>Gas Station</option>
                <option>Gym</option>
                <option>Hair Care</option>
                <option>Hardware Store</option>
                <option>Hindu Temple</option>
                <option>Home Hoods Store</option>
                <option>Jewelry Store</option>
                <option>Library</option>
                <option>Liquor Store</option>
                <option>Lodging</option>
                <option>Mosque</option>
                <option>Movie Theater</option>
                <option>Museum</option>
                <option>Night Club</option>
                <option>Park</option>
                <option>Parking</option>
                <option>Pet Store</option>
                <option>Pharmacy</option>
                <option>Restaurant</option>
                <option>Shoe Store</option>
                <option>Shopping Mall</option>
                <option>Spa</option>
                <option>Stadium</option>
                <option>Store</option>
                <option>Synagogue</option>
                <option>Travel Agency</option>
                <option>University</option>
                <option>Veterinary Care</option>
                <option>Zoo</option>
            </select>  

            <br><br>

            <p1panel>Number of hours to drive daily</p1panel>
            <!-- Input form for additional filters -->
            <input type="number" name="hoursdrivedaily" id="hoursdrivedaily" value="1" min="1" max="99" style="width:50px;color:black;float:right;"/><br><br>
            <p1panel>Maximum number of days on the road</p1panel> <input type="number" name="maxdaysonroad" id="maxdaysonroad" value="2" min="1" max="99" style="width:50px;color:black;float:right;"/><br><br>
            <p1panel>Usual time for lunch</p1panel> <input type="number" name="timelunch" id="timelunch" value="12" min="1" max="24" style="width:50px;color:black;float:right;"/><br> <br>
            <p1panel>Usual time for dinner</p1panel> <input type="number" name="timedinner" id="timedinner" value="18" min="1" max="24" style="width:50px;color:black;float:right;"/><br><br>
            <p1panel>Maximum time driving not stopping</p1panel> <input type="number" name="maxtimedrive" id="maxtimedrive" value="4" min="1" max="99" style="width:50px;color:black;float:right;"/> <br>

            <br>

            <!-- Creates radio buttons for private/public selection -->
            <div id="maptogglePublicPrivate" align="center" style="float:center;"> <!-- TODO radio buttons passing to next page -->
              <label class="grey"><input type="radio" name="toggle" id="privatetoggle"><span>Private</span></label>
              <label class="blue"><input type="radio" name="toggle" id="publictoggle"><span>Public</span></label>
            </div>
      </div>
 </body>
  
  <script>
    /** Date picker function
      * Used as a jQuery Plugin to attach a popup calender to input fields
      * Refences jQuery UI Datepicker
      **/
    $(function() {
      // Attaches pop up calender to departure-datepicker input field in depature form
      $( "#departure-datepicker" ).datepicker({
        prevText:"click for previous months",
        nextText:"click for next months",
        showOtherMonths:true,
        selectOtherMonths: false
      });
      // Attaches pop up calender to destination-datepicker input field in depature form
      $( "#destination-datepicker" ).datepicker({
        prevText:"click for previous months",
        nextText:"click for next months",
        showOtherMonths:true,
        selectOtherMonths: true
      });
    });
  
    // Disables the GO button unless use has put info in both text areas
    // Origin and Destination inputs need to be populated for Go button to be enabled
    function noGoInput(){
      // Store inputed data in origin input and destination input
      var originInput=document.getElementById("origin-input-home");
      var destinationInput=document.getElementById("destination-input-home");

      // Checks if Origin and Destination input fields are null 
      if(originInput.value=="" || destinationInput.value=="") {
        // If true
        // disables GO button
        document.getElementById("GO").disabled=true;
      } else {
       // If false 
        // enables GO button
        document.getElementById("GO").disabled=false;
      }
    }

    // Initialises AutocompleteDirectionsHandler function
    function init(){
      new AutocompleteDirectionsHandler();
    }

    /**
        * @constructor
        * Autocomplete is a feature of the Places library in the Google Maps JavaScript API
        * Use autocomplete for the type-ahead-search behavior of the Google Maps search input fields - departure and destination
    */
    function AutocompleteDirectionsHandler() {
      // this.map = map;
      // PlaceId is a unique referbce to a place on google maps 
      // Set PlaceId for Origin and Destination to be originally null
      this.originPlaceId = null;
      this.destinationPlaceId = null;
      this.travelMode = 'WALKING';
      var originInput = document.getElementById('origin-input-home');
      var destinationInput = document.getElementById('destination-input-home');
      var modeSelector = document.getElementById('mode-selector');
      this.directionsService = new google.maps.DirectionsService;
      // this.directionsDisplay = new google.maps.DirectionsRenderer;
      // this.directionsDisplay.setMap(map);

      // Stores autocompleted map places to origin and destination
      var originAutocomplete = new google.maps.places.Autocomplete(
          originInput, {placeIdOnly: true});
      var destinationAutocomplete = new google.maps.places.Autocomplete(
          destinationInput, {placeIdOnly: true});

      // this.setupClickListener('changemode-driving', 'DRIVING');

      // Listener calls autocomplete when inputing Origin
      this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
      // Listener calls autocomplete when inputing Destination
      this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');
    }

    // Checks that place has been selected from options provided by autocomplete 
    AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(autocomplete, mode) {
      var originInputPlaceId = document.getElementById('originplaceid');
      var destinationInputPlaceId = document.getElementById('destinationplaceid');
      
      var me = this;
      // autocomplete.bindTo('bounds', this.map);
      autocomplete.addListener('place_changed', function() {
        var place = autocomplete.getPlace();
        // checks if a place has been selected
        if (!place.place_id) {
          // window alert to prompt that an option should be selected
          window.alert("Please select an option from the dropdown list.");
          return;
        }
        if (mode === 'ORIG') {
          me.originPlaceId = place.place_id;
          originInputPlaceId.value = place.place_id;
        } else {
          me.destinationPlaceId = place.place_id;
          destinationInputPlaceId.value = place.place_id;
        }
        // me.route();
      });
    };

    // Requests directins based on place selections for Origin and Destination 
    AutocompleteDirectionsHandler.prototype.route = function() {
      if (!this.originPlaceId || !this.destinationPlaceId) {
        return;
      }
      var me = this;

      this.directionsService.route({
        origin: {'placeId': this.originPlaceId},
        destination: {'placeId': this.destinationPlaceId},
        travelMode: this.travelMode
      }, function(response, status) {
        if (status === 'OK') {
          me.directionsDisplay.setDirections(response);
        } else {
          window.alert('Directions request failed due to ' + status);
        }
      });
    };
    
    // Controls the displaying of p1panel upon clicking additional features
    function myFunction() {
      var x = document.getElementById("additionalfilters");
      //  Element will not be displayed
      if (x.style.display === "none") {
          // If true
          // Element is rendered as a block-level element
          // Block element fills the entire line
          // Nothing can be displayed on its right or left
          x.style.display = "block";
      } else {
          // If false
          //Element will not be displayed
          x.style.display = "none";
      }
    }

  </script>

<!-- Places service is a self-contained library
       To use the functionality contained within this library
       load it using the libraries parameter in the Maps API bootstrap URL 
       async - script will be executed while the page continues the parsing
       defer - pecifies that the script is executed when the page has finished parsing -->
  <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDOVAWCWgAiZ_iTjXOVIBoJC0Y-_1xRNos&callback=init&libraries=places">
  </script>

</html>


<!--
=========================
======  TODO    =========

- Make Private Public toggle button.

  <div class="container">
    <div class="row">
        <div class='col-sm-6'>
            <div class="form-group">
                <div class='input-group date' id='datetimepicker3'>
                    <input type='text' class="form-control" />
                      <span class="input-group-addon">
                    </span>
                </div>
            </div>
        </div>
        <script type="text/javascript">
            $(function () {
                $('#datetimepicker3').datetimepicker({
                    format: 'LT'
                });
            });
        </script>
    </div>
</div>

TO BLUR THINGS  , PUT IN DIVs
  -webkit-filter: blur(5px);
  -moz-filter: blur(5px);
  -o-filter: blur(5px);
  -ms-filter: blur(5px);
  filter: blur(5px);

Navigation Bar Bootstrap
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
          <li class="active"><a href="#">Home</a></li>
          <li><a href="#">About</a></li>
          <li><a href="#">Projects</a></li>
          <li><a href="#">Contact</a></li>
      </ul>
      <ul class="nav navbar-nav navbar-right">
          <li><a href="#"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>
      </ul>
    </div>


Categories list, here for reference
airport
amusement_park
aquarium
art_gallery
bakery
bank
bar
beauty_salon
bicycle_store
book_store
bowling_alley
cafe
car_repair
car_wash
casino
church
city_hall
clothing_store
convenience_store
department_store
electronics_store
embassy
florist
gas_station
gym
hair_care
hardware_store
hindu_temple
home_goods_store
jewelry_store
library
liquor_store
lodging
mosque
movie_theater
museum
night_club
park
parking
pet_store
pharmacy
restaurant
shoe_store
shopping_mall
spa
stadium
store
synagogue
travel_agency
university
veterinary_care
zoo
-->